server:
  port: 8081

spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  devtools:
    restart:
      log-condition-evaluation-delta: false
  ## spring cache 配置
  cache:
    type: redis
    redis:
      use-key-prefix: true
      cache-null-values: true
  ## redis 配置
  redis:
    client-type: lettuce
    host: 127.0.0.1
    port: 6379
    password: valina
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 20
        # 连接池中的最大空闲连接
        max-idle: 20
        # 连接池中的最小空闲连接
        min-idle: 0
  ## 数据源配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/security_enterprise?characterEncoding=UTF-8
    username: root
    password: 123456
    druid:
      #初始化时建立物理连接的个数
      initial-Size: 5
      #最小连接池数量
      min-idle: 5
      #最大连接池数量
      max-active: 20
      #获取连接时最大等待时间，单位毫秒
      max-wait: 20000
      #申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
      test-while-idle: true
      time-between-eviction-runs-millis: 120000
      #测试连接
      validation-query: select 'x'
      #获取连接时执行检测
      test-on-borrow: false
      #归还连接时执行检测
      test-on-return: false
      #是否开启PSCache
      pool-prepared-statements: false
      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录
      aop-patterns: "cn.ecust.dao.*,cn.ecust.service.*"
      ########### 启用内置过滤器（stat用于监控SQL）##########
      filters: stat,wall,log4j2
      filter:
        # 开启druid-datasource的状态监控
        stat:
          enabled: true
          db-type: mysql
          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中
          log-slow-sql: true
          slow-sql-millis: 2000
        #开启WallFilter防火墙
        wall:
          enabled: true
        # 日志监控，使用slf4j 进行日志输出
        slf4j:
          enabled: true
          statement-log-error-enabled: true
          statement-create-after-log-enabled: false
          statement-close-after-log-enabled: false
          result-set-open-after-log-enabled: false
          result-set-close-after-log-enabled: false
        ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########
        web-stat-filter:
          enabled: true
          # 过滤所有url
          url-pattern: '/*'
          # 排除一些不必要的url
          exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
          # 开启session统计功能
          session-stat-enable: true
          # session的最大个数,默认100
          session-stat-max-count: 1000
        ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########
        stat-view-servlet:
          enabled: true
          # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html
          url-pattern: '/druid/*'
          # 不允许清空统计数据,重新计算
          reset-enable: false
          # 配置监控页面访问账号
          login-username: admin
          login-password: 123456
          # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问
          # allow: 127.0.0.1
          # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝
          # deny:

  thymeleaf:
    cache: false

## mybatis 配置
mybatis:
  # 是否执行MyBatis xml配置文件的状态检查, 只是检查状态,默认false
  check-config-location: true
  mapper-locations: classpath:mybatis/mapper/*.xml # 扫描mybatis的实现dao接口*.xml文件
  #type-aliases-package: cn.ecust.web.entity #实体类取别名
  config-location: classpath:mybatis/mybatis-config.xml
logging:
  config: classpath:log4j2.xml
